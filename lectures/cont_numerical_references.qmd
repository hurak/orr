---
title: "References"
bibliography: 
    - ref_numerical_optimal_control.bib
    - ref_optimal_control.bib
    - ref_model_predictive_control.bib
csl: ieee-control-systems.csl
format:
    html:
        html-math-method: katex
        code-fold: true
execute:
    enabled: false
    warning: false
engine: julia
---


The indirect approach to the continuous-time optimal control problem (OCP), which  formulates the necessary conditions of optimality as a two-point boundary value problem (TP-BVP), generally calls for *numerical methods* that iterate over trajectories. Besides some simple textbook problems allowing closed-form solutions, an regular exception is the LQR problem, for which a proportional feedback control is determined by solving (albeit also numerically) the continuous-time algebraic Riccati equation (CARE). 

The direct approach to the continuous-time OCP proceeds by transcribing (discretizing) the continuous-time problem into a nonlinear programming problem (NLP), which is then solved *numerically* for the optimal (discretized) trajectories.

Numerical methods for both direct and indirect approaches share a lot of common principles and tools. These are collectively presented in the literature as called *numerical optimal control*. A recommendable (and freely online available) introduction to these methods is [@grosNumericalOptimalControl2022]. Shorter version of this is in [@rawlingsModelPredictiveControl2017, Chapter 8], which is also freely available online. A more comprehensive treatment by another authors is in [@bettsPracticalMethodsOptimal2020]. 

Some survey papers such as [@raoSurveyNumericalMethods2009] and [@vonstrykDirectIndirectMethods1992] can also be useful, although now primarily as historical accounts. Similarly with the classics [@kirkOptimalControlTheory2004] and [@brysonAppliedOptimalControl1975], which cover the indirect approach only. 

Another name under which the numerical methods for the direct approach are presented is trajectory optimization. There are quite a few tutorials and surveys such as [@kellyIntroductionTrajectoryOptimization2017] and [@kellyTranscriptionMethodsTrajectory2017]. Recommendable is surely the dedicated chapter of the popular course [@tedrakeUnderactuatedRoboticsAlgorithms2024, Chapter 10].